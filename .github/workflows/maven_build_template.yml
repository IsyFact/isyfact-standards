name: Check Maven Template
on:
  workflow_call:
    inputs:
      jdk-version:
        description: 'Version of jdk that is used.'
        required: false
        type: number
        default: 17
      maven-opts:
        description: 'Additional arguments passed to maven'
        required: false
        type: string
        default: ''
      checkout-lfs:
        description: 'Checkout files from Git LFS'
        required: false
        type: boolean
        default: false
      version:
        description: 'Version used for maven CI friendly versions'
        required: false
        type: string
        default: '0.0.0-SNAPSHOT'
      sonar-skip:
        description: 'Skip Sonar Scan job'
        required: false
        type: boolean
        default: false
    secrets:
      SONAR_TOKEN:
        description: 'Token to publish analysis result on sonar'
        required: false

env:
  MAVEN_CLI_OPTS: '--batch-mode --errors --fail-at-end -T 1C'

jobs:
  Compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: ${{ inputs.checkout-lfs }}
      - name: Set up JDK ${{ inputs.jdk-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk-version }}
          distribution: temurin
          cache: maven
      - name: Compile
        run: mvn $MAVEN_CLI_OPTS ${{ inputs.maven-opts }} -Drevision=${{ inputs.version }} -Dcheckstyle.skip compile

  Test:
    runs-on: ubuntu-latest
    needs: [Compile]
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: ${{ inputs.checkout-lfs }}
      - name: Set up JDK ${{ inputs.jdk-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk-version }}
          distribution: temurin
          cache: maven
      - name: Run tests
        run: mvn $MAVEN_CLI_OPTS ${{ inputs.maven-opts }} -Drevision=${{ inputs.version }} -Dcheckstyle.skip test
      - name: Create summary
        run: |
          echo "| Module | Total Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          COUNTER=0
          SUM=0
          for REPORT in $(find . -path \*target/site/jacoco/index.html); do
            MODULE=$(grep -o '<title>[^%].*</title>'  "$REPORT"| sed 's/<\/\?title>//g')
            COVERAGE=$(grep -o 'Total[^%]*%' "$REPORT" | sed 's/<.*>/ /; s/Total//; s/Â //; s/%//')
            echo "| $MODULE | $COVERAGE % |" >> $GITHUB_STEP_SUMMARY
            COUNTER=$((COUNTER+1))
            SUM=$((SUM+COVERAGE))
          done
          [[ $COUNTER -gt 0 ]] && TOTAL_COVERAGE=$((SUM/COUNTER)) || TOTAL_COVERAGE=0
          echo "| Overall | $TOTAL_COVERAGE % |" >> $GITHUB_STEP_SUMMARY
      - name: Upload Reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Test Reports
          path: |
            ${{ github.workspace }}/**/target/site/jacoco/jacoco.xml
            ${{ github.workspace }}/**/target/surefire-reports/*.xml

  CodeQuality:
    runs-on: ubuntu-latest
    # Run quality checks if sonar is not configured for the project
    if: vars.SONAR_PROJECT_KEY == ''
    needs: [Compile]
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: ${{ inputs.checkout-lfs }}
      - name: Set up JDK ${{ inputs.jdk-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk-version }}
          distribution: temurin
          cache: maven
      - name: Run checkstyle
        run: >
          mvn $MAVEN_CLI_OPTS ${{ inputs.maven-opts }} -Drevision=${{ inputs.version }} 
          compile checkstyle:checkstyle-aggregate
      - name: Run spotbugs
        run: >
          mvn $MAVEN_CLI_OPTS ${{ inputs.maven-opts }} -Drevision=${{ inputs.version }} 
          -Dcheckstyle.skip -Denforcer.skip -Dtidy.skip compile spotbugs:check
      - name: Upload Reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Quality Reports
          path: |
            ${{ github.workspace }}/**/target/checkstyle-result.xml
             ${{ github.workspace }}/**/target/spotbugs*.xml

  SonarScan:
    runs-on: ubuntu-latest
    # run also, if test or code quality jobs fail; skip dependabot pr as dependabot has separate secrets
    if: vars.SONAR_PROJECT_KEY && !cancelled() && github.actor != 'dependabot[bot]' && !inputs.sonar-skip
    needs: [Test, CodeQuality]
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: ${{ inputs.checkout-lfs }}
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          # Sonar Plugin requires Java 17 or higher
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Sonar Cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Download Test Reports
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: Test Reports
      - name: Sonar Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          mvn $MAVEN_CLI_OPTS ${{ inputs.maven-opts }} -Drevision=${{ inputs.version }}
          -DskipTests -Dspotbugs.skip -Dcheckstyle.skip -Dmaven.javadoc.skip -Denforcer.skip
          -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
          -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }} -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
          verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar
      - name: Upload Meta Data
        uses: actions/upload-artifact@v4
        with:
          name: Sonar Meta Data
          path:
            ${{ github.workspace }}/target/sonar/report-task.txt
